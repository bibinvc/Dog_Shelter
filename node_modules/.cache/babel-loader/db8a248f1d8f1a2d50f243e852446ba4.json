{"remainingRequest":"/home/abdul/Documents/projects/vue/ecommerce-vue/node_modules/babel-loader/lib/index.js!/home/abdul/Documents/projects/vue/ecommerce-vue/node_modules/eslint-loader/index.js??ref--13-0!/home/abdul/Documents/projects/vue/ecommerce-vue/src/store/cart.js","dependencies":[{"path":"/home/abdul/Documents/projects/vue/ecommerce-vue/src/store/cart.js","mtime":1554064726919},{"path":"/home/abdul/Documents/projects/vue/ecommerce-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/abdul/Documents/projects/vue/ecommerce-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/abdul/Documents/projects/vue/ecommerce-vue/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"/home/abdul/Documents/projects/vue/ecommerce-vue/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport swal from 'sweetalert';\nvar state = {\n  cart: []\n};\nvar getters = {\n  cartLength: function cartLength() {\n    return state.cart.length;\n  }\n};\nvar mutations = {\n  ADD_TO_CART: function ADD_TO_CART(state, productId) {\n    // add to cart or append to cart.\n    var cart = JSON.parse(localStorage.getItem('cart'));\n\n    if (cart) {\n      var existing_cart = JSON.parse(localStorage.getItem('cart'));\n      existing_cart.push(productId);\n      state.cart = existing_cart;\n      localStorage.setItem('cart', _JSON$stringify(existing_cart));\n    } else {\n      state.cart.push(productId);\n      localStorage.setItem('cart', _JSON$stringify(state.cart));\n    }\n\n    swal('Success!', 'Item Added to Cart', 'success');\n  },\n  REMOVE_FROM_CART: function REMOVE_FROM_CART(state, productId) {\n    // remove item from cart\n    var existing_cart = JSON.parse(localStorage.getItem('cart'));\n    var position = existing_cart.indexOf(productId);\n    existing_cart.splice(position, 1);\n    state.cart = existing_cart;\n    localStorage.setItem('cart', _JSON$stringify(existing_cart));\n    swal('Removed!', 'Item Removed from Cart', 'warning');\n  },\n  LOAD_CART: function LOAD_CART(state) {\n    if (JSON.parse(localStorage.getItem('cart'))) {\n      state.cart = JSON.parse(localStorage.getItem('cart'));\n    }\n  }\n};\nvar actions = {\n  addToCart: function addToCart(_ref, productId) {\n    var commit = _ref.commit;\n    commit('ADD_TO_CART', productId);\n  },\n  removeFromCart: function removeFromCart(_ref2, productId) {\n    var commit = _ref2.commit;\n    commit('REMOVE_FROM_CART', productId);\n  },\n  loadCart: function loadCart(_ref3) {\n    var commit = _ref3.commit;\n    commit('LOAD_CART');\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/home/abdul/Documents/projects/vue/ecommerce-vue/src/store/cart.js"],"names":["swal","state","cart","getters","cartLength","length","mutations","ADD_TO_CART","productId","JSON","parse","localStorage","getItem","existing_cart","push","setItem","REMOVE_FROM_CART","position","indexOf","splice","LOAD_CART","actions","addToCart","commit","removeFromCart","loadCart"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,YAAjB;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE;AADI,CAAd;AAIA,IAAMC,OAAO,GAAG;AACZC,EAAAA,UADY,wBACC;AACT,WAAOH,KAAK,CAACC,IAAN,CAAWG,MAAlB;AACH;AAHW,CAAhB;AAMA,IAAMC,SAAS,GAAG;AACdC,EAAAA,WADc,uBACFN,KADE,EACKO,SADL,EACgB;AAC1B;AACA,QAAMN,IAAI,GAAGO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;AACA,QAAGV,IAAH,EAAS;AACL,UAAMW,aAAa,GAAGJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAtB;AACAC,MAAAA,aAAa,CAACC,IAAd,CAAmBN,SAAnB;AACAP,MAAAA,KAAK,CAACC,IAAN,GAAaW,aAAb;AACAF,MAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6B,gBAAeF,aAAf,CAA7B;AACH,KALD,MAMK;AACDZ,MAAAA,KAAK,CAACC,IAAN,CAAWY,IAAX,CAAgBN,SAAhB;AACAG,MAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6B,gBAAed,KAAK,CAACC,IAArB,CAA7B;AACH;;AACDF,IAAAA,IAAI,CAAC,UAAD,EAAa,oBAAb,EAAmC,SAAnC,CAAJ;AAEH,GAhBa;AAkBdgB,EAAAA,gBAlBc,4BAkBGf,KAlBH,EAkBUO,SAlBV,EAkBqB;AAC/B;AACA,QAAMK,aAAa,GAAGJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAtB;AACA,QAAIK,QAAQ,GAAGJ,aAAa,CAACK,OAAd,CAAsBV,SAAtB,CAAf;AACAK,IAAAA,aAAa,CAACM,MAAd,CAAqBF,QAArB,EAA+B,CAA/B;AACAhB,IAAAA,KAAK,CAACC,IAAN,GAAaW,aAAb;AACAF,IAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6B,gBAAeF,aAAf,CAA7B;AACAb,IAAAA,IAAI,CAAC,UAAD,EAAa,wBAAb,EAAuC,SAAvC,CAAJ;AACH,GA1Ba;AA4BdoB,EAAAA,SA5Bc,qBA4BJnB,KA5BI,EA4BG;AACb,QAAGQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAH,EAA6C;AACzCX,MAAAA,KAAK,CAACC,IAAN,GAAaO,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACH;AAEJ;AAjCa,CAAlB;AAoCA,IAAMS,OAAO,GAAG;AACZC,EAAAA,SADY,2BACQd,SADR,EACmB;AAAA,QAApBe,MAAoB,QAApBA,MAAoB;AAC3BA,IAAAA,MAAM,CAAC,aAAD,EAAgBf,SAAhB,CAAN;AACH,GAHW;AAKZgB,EAAAA,cALY,iCAKahB,SALb,EAKwB;AAAA,QAApBe,MAAoB,SAApBA,MAAoB;AAChCA,IAAAA,MAAM,CAAC,kBAAD,EAAqBf,SAArB,CAAN;AACH,GAPW;AASZiB,EAAAA,QATY,2BASO;AAAA,QAATF,MAAS,SAATA,MAAS;AACfA,IAAAA,MAAM,CAAC,WAAD,CAAN;AACH;AAXW,CAAhB;AAcA,eAAe;AACXtB,EAAAA,KAAK,EAAEA,KADI;AAEXE,EAAAA,OAAO,EAAEA,OAFE;AAGXG,EAAAA,SAAS,EAAEA,SAHA;AAIXe,EAAAA,OAAO,EAAEA;AAJE,CAAf","sourcesContent":["import swal from 'sweetalert'\n\nconst state = {\n    cart: [],\n}\n\nconst getters = {\n    cartLength() {\n        return state.cart.length\n    }\n}\n\nconst mutations = {\n    ADD_TO_CART(state, productId) {\n        // add to cart or append to cart.\n        const cart = JSON.parse(localStorage.getItem('cart'))\n        if(cart) {\n            const existing_cart = JSON.parse(localStorage.getItem('cart'))\n            existing_cart.push(productId)\n            state.cart = existing_cart\n            localStorage.setItem('cart', JSON.stringify(existing_cart))\n        }\n        else {\n            state.cart.push(productId)\n            localStorage.setItem('cart', JSON.stringify(state.cart))\n        }\n        swal('Success!', 'Item Added to Cart', 'success');\n\n    },\n\n    REMOVE_FROM_CART(state, productId) {\n        // remove item from cart\n        const existing_cart = JSON.parse(localStorage.getItem('cart'))\n        let position = existing_cart.indexOf(productId)\n        existing_cart.splice(position, 1)\n        state.cart = existing_cart\n        localStorage.setItem('cart', JSON.stringify(existing_cart))\n        swal('Removed!', 'Item Removed from Cart', 'warning');\n    },\n\n    LOAD_CART(state) {\n        if(JSON.parse(localStorage.getItem('cart'))) {\n            state.cart = JSON.parse(localStorage.getItem('cart'))\n        }\n        \n    },\n}\n\nconst actions = {\n    addToCart({commit}, productId) {\n        commit('ADD_TO_CART', productId)\n    },\n\n    removeFromCart({commit}, productId) {\n        commit('REMOVE_FROM_CART', productId)\n    },\n\n    loadCart({commit}) {\n        commit('LOAD_CART')\n    },\n}\n\nexport default {\n    state: state,\n    getters: getters,\n    mutations: mutations,\n    actions: actions\n}"]}]}