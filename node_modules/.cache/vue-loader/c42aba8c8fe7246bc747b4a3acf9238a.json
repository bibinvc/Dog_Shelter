{"remainingRequest":"C:\\Users\\bvcbi\\Documents\\GitHub\\Dog_Shelter\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bvcbi\\Documents\\GitHub\\Dog_Shelter\\src\\layouts\\header.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\bvcbi\\Documents\\GitHub\\Dog_Shelter\\src\\layouts\\header.vue","mtime":1706295035217},{"path":"C:\\Users\\bvcbi\\Documents\\GitHub\\Dog_Shelter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706338102715},{"path":"C:\\Users\\bvcbi\\Documents\\GitHub\\Dog_Shelter\\node_modules\\babel-loader\\lib\\index.js","mtime":1706295011410},{"path":"C:\\Users\\bvcbi\\Documents\\GitHub\\Dog_Shelter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706338102715},{"path":"C:\\Users\\bvcbi\\Documents\\GitHub\\Dog_Shelter\\node_modules\\vue-loader\\lib\\index.js","mtime":1706338104127}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    computed: {\r\n      cartLength() {\r\n        return this.$store.getters.cartLength\r\n      },\r\n\r\n      cartItems() {\r\n        const products = this.$store.state.products.products\r\n        const cart = this.$store.state.cart.cart\r\n        const cart_items = []\r\n        cart.forEach((cart_item) => {\r\n          const cart_product = products.find(prod => prod.id == cart_item)\r\n          cart_items.push(cart_product)\r\n        })\r\n\r\n        return cart_items.slice(0, 3)\r\n      },\r\n\r\n      categories() {\r\n        return this.$store.state.products.categories\r\n      },\r\n\r\n    },\r\n}\r\n",{"version":3,"sources":["header.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","file":"header.vue","sourceRoot":"src/layouts","sourcesContent":["<template>\r\n    <div>\r\n      <!-- Navigation -->\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n    <div class=\"container\">\r\n      <router-link class=\"navbar-brand\" to=\"/home\">Dog Shelter</router-link>\r\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      \r\n      <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n        <ul class=\"navbar-nav ml-auto\">\r\n         \r\n\r\n          <li class=\"nav-item dropdown\">\r\n            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n               <i class=\" fa fa-heart\"></i> \r\n               <span class=\"badge badge-primary\">{{cartLength}}</span>\r\n            </button>\r\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                <ul class=\"list-group\">\r\n                <li class=\"list-group-item\" v-for=\"item in cartItems\" :key=\"item.id\">\r\n                  <b>{{ item.name }}</b> | @{{ item.selling_price }}\r\n                </li>\r\n                <li class=\"list-group-item\">\r\n                  <router-link to='/home/FavouriteList' class=\"btn btn-success\">View All <i class=\" fa fa-heart\"></i></router-link>\r\n                </li>\r\n                </ul>\r\n            </div>\r\n          </li>\r\n         \r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    computed: {\r\n      cartLength() {\r\n        return this.$store.getters.cartLength\r\n      },\r\n\r\n      cartItems() {\r\n        const products = this.$store.state.products.products\r\n        const cart = this.$store.state.cart.cart\r\n        const cart_items = []\r\n        cart.forEach((cart_item) => {\r\n          const cart_product = products.find(prod => prod.id == cart_item)\r\n          cart_items.push(cart_product)\r\n        })\r\n\r\n        return cart_items.slice(0, 3)\r\n      },\r\n\r\n      categories() {\r\n        return this.$store.state.products.categories\r\n      },\r\n\r\n    },\r\n}\r\n</script>\r\n"]}]}