{"remainingRequest":"C:\\Users\\bvcbi\\OneDrive\\Desktop\\Dog_Shelter\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bvcbi\\OneDrive\\Desktop\\Dog_Shelter\\src\\pages\\FavouriteList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\bvcbi\\OneDrive\\Desktop\\Dog_Shelter\\src\\pages\\FavouriteList.vue","mtime":1655766022913},{"path":"C:\\Users\\bvcbi\\OneDrive\\Desktop\\Dog_Shelter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655765997872},{"path":"C:\\Users\\bvcbi\\OneDrive\\Desktop\\Dog_Shelter\\node_modules\\babel-loader\\lib\\index.js","mtime":1655765996485},{"path":"C:\\Users\\bvcbi\\OneDrive\\Desktop\\Dog_Shelter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1655765997872},{"path":"C:\\Users\\bvcbi\\OneDrive\\Desktop\\Dog_Shelter\\node_modules\\vue-loader\\lib\\index.js","mtime":1655766021111}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nexport default {\r\n\r\n    data() {\r\n      return {\r\n        \r\n      }\r\n    },\r\n\r\n    computed: {\r\n\r\n    products() {\r\n      return this.$store.state.products.products\r\n    },\r\n\r\n    cartItems() {\r\n        const products = this.products\r\n        const cart = this.$store.state.cart.cart\r\n        const cart_items = []\r\n        cart.forEach((cart_item) => {\r\n            const cart_product = products.find(prod => prod.id == cart_item)\r\n            cart_items.push(cart_product)\r\n        })\r\n\r\n        return cart_items\r\n    },\r\n\r\n    cartTotal() {\r\n        let cart_total = null\r\n        this.cartItems.forEach(item => {\r\n            cart_total += item.selling_price\r\n        })\r\n        return cart_total\r\n    }\r\n\r\n  },\r\n\r\n  methods: {\r\n      removeFromList(productId) {\r\n          // remove item from cart. localstorage. then state\r\n          this.$store.dispatch('removeFromList', productId)\r\n      }\r\n  },\r\n}\r\n",{"version":3,"sources":["FavouriteList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FavouriteList.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <div>\r\n      <!-- Page Content -->\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8 offset-md-2\">\r\n        <h1 class=\"my-4 text-center text-info\">Favourite List <i class=\" fa fa-heart\"></i></h1>\r\n\r\n        <table class=\"table table-bordered table-hover table-responsive\">\r\n         <thead>\r\n             <tr>\r\n                 <th>Number</th>\r\n                 <th>Name</th>\r\n                 <th>Date Of Birth</th>\r\n                 <th>Image</th>\r\n            </tr>\r\n         </thead>\r\n\r\n         <tbody>\r\n             <tr v-for=\"(item, index) in cartItems\" :key=\"item.id\">\r\n                 <td>{{ index + 1 }}</td>\r\n                 <td>{{ item.name }}</td>\r\n                 <td>{{ item.Date_Of_Birth }}</td>\r\n                 <td>{{ item.image }}</td>\r\n                 <td><button class=\"btn btn-danger\" type=\"button\" @click=\"removeFromList(item.id)\">X</button></td>\r\n             </tr>\r\n         </tbody>\r\n        </table>\r\n\r\n      </div>\r\n      <!-- /.col-lg-3 -->\r\n    </div>\r\n    <!-- /.row -->\r\n  </div>\r\n  <!-- /.container -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n\r\n    data() {\r\n      return {\r\n        \r\n      }\r\n    },\r\n\r\n    computed: {\r\n\r\n    products() {\r\n      return this.$store.state.products.products\r\n    },\r\n\r\n    cartItems() {\r\n        const products = this.products\r\n        const cart = this.$store.state.cart.cart\r\n        const cart_items = []\r\n        cart.forEach((cart_item) => {\r\n            const cart_product = products.find(prod => prod.id == cart_item)\r\n            cart_items.push(cart_product)\r\n        })\r\n\r\n        return cart_items\r\n    },\r\n\r\n    cartTotal() {\r\n        let cart_total = null\r\n        this.cartItems.forEach(item => {\r\n            cart_total += item.selling_price\r\n        })\r\n        return cart_total\r\n    }\r\n\r\n  },\r\n\r\n  methods: {\r\n      removeFromList(productId) {\r\n          // remove item from cart. localstorage. then state\r\n          this.$store.dispatch('removeFromList', productId)\r\n      }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.selling-price {\r\n  text-decoration-line: line-through;\r\n}\r\n\r\n.card-title {\r\n  text-transform: capitalize;\r\n}\r\n</style>\r\n"]}]}